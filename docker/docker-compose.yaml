version: "3.8"

services:
  api_gateway:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api_gateway
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - kafka-ui
      - service_server
    env_file:
      - ../.env.dev

  service_server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.service_server
    ports:
      - "8001:8001"
    depends_on:
      db:
        condition: service_started
      kafka:
        condition: service_healthy
      kafka-ui:
        condition: service_started
    env_file:
      - ../.env.dev

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: hearlersu
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: hearlers_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 zookeeper 2181"]
      interval: 5s
      timeout: 10s
      retries: 3

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test:
        ["CMD", "bash", "-c", "unset", "JMX_PORT", ";", "kafka-topics.sh", "--zookeeper", "zookeeper:2181", "--list"]
      interval: 10s
      timeout: 10s
      retries: 4

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - kafka

volumes:
  postgres_data:
